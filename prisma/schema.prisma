// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    output   = "../generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Sizes {
    xs
    s
    m
    l
    xl
    xxl
}

enum Gender {
    mens
    womens
}

enum OrderStatus {
    paid
    refunded
}

enum UserRoles {
    admin
    user
}

model Product {
    id              String            @id @default(uuid())
    name            String
    gender          Gender
    price           Int
    slug            String            @unique
    src             String
    alt             String
    dateAdded       DateTime          @default(now())
    stock           Stock[]
    featuredProduct FeaturedProduct[]
    orderItem       OrderItem[]       @ignore
}

model Stock {
    id        String  @id @default(uuid())
    size      Sizes
    quantity  Int
    productId String
    product   Product @relation(fields: [productId], references: [id])

    @@unique([productId, size])
}

model FeaturedProduct {
    id        String  @id @default(uuid())
    productId String
    product   Product @relation(fields: [productId], references: [id])
}

model OrderItem {
    id        String  @id @default(uuid())
    productId String
    product   Product @relation(fields: [productId], references: [id])
    name      String
    price     Int
    size      Sizes
    quantity  Int
    orderId   Int
    order     Order   @relation(fields: [orderId], references: [id])
}

model Order {
    id            Int         @id @default(autoincrement())
    subTotal      Int
    shippingTotal Int
    total         Int
    items         OrderItem[]
    status        OrderStatus @default(paid)
    userId        Int?
    user          User?       @relation(fields: [userId], references: [id])
    email         String
    createdAt     DateTime    @default(now())
    sessionId     String
}

model User {
    id        Int       @id @default(autoincrement())
    username  String    @unique
    password  String
    email     String    @unique
    role      UserRoles
    orders    Order[]
    createdAt DateTime  @default(now())
}
